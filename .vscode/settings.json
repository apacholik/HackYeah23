{
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "editor.formatOnSave": true,
  "commit-message-editor.view.defaultView": "form",
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "feat",
          "description": "A new feature"
        },
        {
          "label": "fix",
          "description": "A bug fix"
        },
        {
          "label": "chore",
          "description": "Maintenance"
        },
        {
          "label": "docs",
          "description": "Documentation only changes"
        },
        {
          "label": "style",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "refactor",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "perf",
          "description": "A code change that improves performance"
        },
        {
          "label": "test",
          "description": "Adding missing tests or correcting existing tests"
        },
        {
          "label": "ci",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Scope",
      "name": "scope",
      "description": "A scope may be provided to a commit's type, to provide additional contextual information and is contained within parenthesis, e.g., <code>feat(parser): add ability to parse arrays</code>.",
      "multiline": false,
      "prefix": "(",
      "suffix": ")",
      "type": "enum",
      "options": [
        {
          "label": "app"
        },
        {
          "label": "project"
        },
        {
          "label": "package"
        }
      ]
    },
    {
      "label": "Short description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    },
    {
      "label": "Footer",
      "name": "footer",
      "description": "Optional footer",
      "type": "text",
      "multiline": true
    }
  ],
  "tailwindCSS.experimental.classRegex": [["tv\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"]]
}
